# -*- coding: utf-8 -*-
"""Tasks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aIGR1bFQyfknOZ9IggzhXqfKCmwyXZ-L

# 1. Basic Data Exploration:
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
data_frame = pd.read_csv("/content/Salaries.csv")

# عدد الصفوف والأعمدة
num_rows,num_columns= data_frame.shape

print("عدد الصفوف:", num_rows)
print("عدد الأعمدة:", num_columns)

# أنواع البيانات لكل عمود
data_types = data_frame.dtypes
print("أنواع البيانات:")
print(data_types)

# التحقق من وجود قيم مفقودة في كل عمود
missing_values = data_frame.isnull().sum()
print("عدد القيم المفقودة في كل عمود:")
print(missing_values)

"""#2. Descriptive Statistics:"""

# Calculate mean salary
mean_salary = data_frame['TotalPayBenefits'].mean()

# Calculate median salary
median_salary = data_frame['TotalPayBenefits'].median()

# Calculate mode of salary
mode_salary = data_frame['TotalPayBenefits'].mode()

# Calculate minimum and maximum salary
min_salary = data_frame['TotalPayBenefits'].min()
max_salary = data_frame['TotalPayBenefits'].max()

# Calculate range of salaries
salary_range = max_salary - min_salary

# Calculate standard deviation of salary
std_salary = data_frame['TotalPayBenefits'].std()

# Print the calculated statistics
print("Mean Salary:", mean_salary)
print("Median Salary:", median_salary)
print("Mode Salary:", mode_salary)
print("Minimum Salary:", min_salary)
print("Maximum Salary:", max_salary)
print("Salary Range:", salary_range)
print("Standard Deviation of Salary:", std_salary)
# Or in a short way
print(" \n Print the calculated statistics: \n",data_frame['TotalPayBenefits'].describe())

"""# 3. Data Cleaning:"""

#استدال القيم النقيصة بي قيم متوسط العامود
data_frame.BasePay.fillna(data_frame.BasePay.mean(), inplace=True)
data_frame.OvertimePay.fillna(data_frame.OvertimePay.mean(), inplace=True)
data_frame.OtherPay.fillna(data_frame.OtherPay.mean(), inplace=True)
data_frame.TotalPayBenefits.fillna(data_frame.TotalPayBenefits.mean(), inplace=True)
#حسب الطريقة المتبعةBenefits  استبدل القيم الناقصة في عامود
#data_frame['Benefits'] = data_frame['TotalPayBenefits'] - data_frame['TotalPay']
#data_frame['Benefits'] == 0
data_frame['Benefits'] = data_frame['Benefits'].fillna(0)
data_frame['Notes'] = data_frame['Notes'].fillna(0)
data_frame['Status'] = data_frame['Status'].fillna(0)
data_frame['EmployeeName'] = data_frame['EmployeeName'].fillna(0)
# استبدال القيم الناقصة بالمنوال
data_frame['Year'].fillna(data_frame['Year'].mode()[0], inplace=True)
data_frame['Agency'].fillna(data_frame['Agency'].mode()[0], inplace=True)
data_frame['JobTitle'].fillna(data_frame['JobTitle'].mode()[0], inplace=True)
data_frame.TotalPay.fillna(data_frame.OtherPay.mean(), inplace=True)
# التحقق من القيم المفقودة في كل عمود
missing_values = data_frame.isnull().sum()
print('القيم المفقودة في كل عمود:')
print(missing_values)

"""# 4. Basic Data Visualization:"""

# Import libraries
import pandas as pd
import matplotlib.pyplot as plt




# Create histograms or bar charts to visualize the distribution of salaries
plt.figure(figsize=(10, 6))
plt.hist(data_frame["TotalPayBenefits"], bins=20, color="blue", edgecolor="black")
plt.xlabel("Salary")
plt.ylabel("Frequency")
plt.title("Histogram of Salaries")
plt.show()

# Create pie charts to represent the proportion of employees in different departments
plt.figure(figsize=(8, 8))
plt.pie(data_frame["JobTitle"].value_counts(), labels=data_frame["JobTitle"].unique(), autopct="%1.1f%%")
plt.title("Pie Chart of Departments")
plt.show()

"""# 5. Grouped Analysis:"""

import pandas as pd
# إنشاء DataFrame مع البيانات الخاصة بك
# قم بإنشاء DataFrame مع أعمدة 'TotalPayBenefits' و 'BasePay'
data_frame = pd.DataFrame({
    'BasePay': data_frame['BasePay'].values,
    'Year': data_frame['Year'].values,
    'JobTitle': data_frame['JobTitle'].values

})

# تجميع البيانات بواسطة عمودي "JobTitle" و "Year" وحساب الإحصائيات الملخصة
grouped_data = data_frame.groupby(['JobTitle', 'Year'])
summary_statistics = grouped_data['BasePay'].mean()

# طباعة الإحصائيات الملخصة
print(summary_statistics)

"""# 6. Simple Correlation Analysis:"""

import pandas as pd
import matplotlib.pyplot as plt

# قم بإنشاء DataFrame مع أعمدة 'TotalPayBenefits' و 'BasePay'
data_frame = pd.DataFrame({
    'BasePay': data_frame['BasePay'].astype(float),
     'JobTitle': data_frame['JobTitle'].values
})
data_frame['JobTitle'] = pd.Categorical(data_frame['JobTitle'])
data_frame['JobTitle'] = data_frame['JobTitle'].cat.codes
# Calculate the correlation coefficient
correlation = data_frame['BasePay'].corr(data_frame['JobTitle'])

# Print the correlation coefficient
print("Correlation coefficient:", correlation)

# Plot the scatter plot
data_frame.plot.scatter(x='BasePay', y='JobTitle')
plt.xlabel('BasePay')
plt.ylabel('JobTitle')
plt.title('Relationship between BasePay and JobTitle')
plt.show()

"""#7. Summary of Insights:"""

'''

Summary of Insights:

    The findings and insights from the analyses provide a comprehensive understanding of the dataset, its characteristics, and the relationships between variables.
    Key insights may include the central tendency and variability of salaries, the distribution of salaries, the proportion of employees in different departments, and any correlations or relationships observed.
    These insights can inform decision-making processes related to compensation, workforce planning, and resource allocation within the organization.

'''